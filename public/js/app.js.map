{"version":3,"sources":["zd-video.js","app.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["(function ($, root) {\r\n    // init video object\r\n    function ZdVideo(opts) {\r\n        opts = opts || {};\r\n        if (!opts.container || !$('#' + opts.container)) {\r\n            throw new Error('video container not found!')\r\n        }\r\n        if (!opts.source || opts.source.length == 0) {\r\n            throw new Error('no video source found!')\r\n        }\r\n        this.opts = opts;\r\n        this.container = $('#' + this.opts.container); //jquery obj\r\n        this.tpl = null;\r\n        this.init();\r\n    }\r\n\r\n    function _getVideoType(source) {\r\n        var texts = source.split('.');\r\n        var type = texts[texts.length - 1];\r\n        switch (type) {\r\n            case \"mp4\":\r\n                return 'video/mp4';\r\n            case 'wbbm':\r\n                return 'video/webm';\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    function launchFullScreen(elem) {\r\n        var requestFullScreen = elem.requestFullscreen || elem.msRequestFullscreen || elem.mozRequestFullScreen || elem.webkitRequestFullscreen;\r\n        requestFullScreen.call(elem);\r\n    }\r\n\r\n    ZdVideo.prototype.setTpl = function () {\r\n\r\n        var width = this.opts.width ? this.opts.width : 640;\r\n        var height = this.opts.height ? this.opts.height : 320;\r\n        var tpl = '\\n<div class=\"zd-video\">\\n<div class=\"zd-video-control zd-video-big-play\"></div>\\n<video width=\"' + width + '\" height=\"' + height + '\"';\r\n        if (this.opts.autoplay) {\r\n            tpl += ' autoplay'\r\n        }\r\n        if (this.opts.loop) {\r\n            tpl += ' loop'\r\n        }\r\n        if (this.opts.poster) {\r\n            tpl += ' poster=' + this.opts.poster;\r\n        }\r\n        if (typeof this.opts.source === 'string') {\r\n            tpl += ' src=' + this.opts.source;\r\n        }\r\n\r\n        tpl += '>\\n';\r\n\r\n        if (Array.isArray(this.opts.source) && this.opts.source.length > 0) {\r\n            this.opts.source.forEach(function (item) {\r\n                tpl += '<source src=' + item + ' type=' + _getVideoType(item) + '/>\\n';\r\n            });\r\n        }\r\n        tpl += '</video>\\n';\r\n\r\n        //add controls\r\n        tpl += '<div class=\"zd-video-controls\">\\\r\n                <div class=\"zd-video-progress\">\\\r\n                  <div class=\"zd-video-progress-bar\"></div>\\\r\n                </div>\\\r\n                <div class=\"zd-controls-body\">\\\r\n                  <div class=\"zd-controls-left\">\\\r\n                    <span class=\"zd-video-play zd-video-control\"></span>\\\r\n                    <span class=\"zd-video-pause zd-video-control\"></span>\\\r\n                    <span class=\"zd-video-time\">00:00</span>\\\r\n                  </div>\\\r\n                  <div class=\"zd-controls-right\">\\\r\n                    <span class=\"zd-video-control zd-video-mute\"></span>\\\r\n                    <div class=\"zd-video-volume\">\\\r\n                      <div class=\"zd-video-volume-bar\"></div>\\\r\n                    </div>\\\r\n                    <span class=\"zd-video-control zd-video-fullscreen\"></span>\\\r\n                  </div>\\\r\n                </div>\\\r\n              </div>';\r\n        tpl += '</div>';\r\n\r\n        this.container.append($(tpl));\r\n    };\r\n\r\n    ZdVideo.prototype.setVideotDimensions = function () {\r\n        if (!this.video) {\r\n            this.video = this.container.find('video')[0];\r\n        }\r\n        var width = this.video.width;\r\n        var height = this.video.height;\r\n        this.container.css('width', width);\r\n\r\n        if (!this.controls) {\r\n            this.controls = this.container.find('.zd-video-controls');\r\n        }\r\n\r\n        //this.controls.css('width', width - 0);\r\n\r\n    };\r\n\r\n    ZdVideo.prototype.setFullScreenStyle = function () {\r\n        if (!this.video) {\r\n            this.video = this.container.find('video')[0];\r\n        }\r\n        this.container.css({width: '100%', height: '100%'});\r\n        this.video.setAttribute('width', '100%');\r\n        this.video.setAttribute('height', '100%');\r\n        this.controls.css('width', '90%');\r\n    };\r\n\r\n    ZdVideo.prototype.addEvents = function () {\r\n        var self = this;\r\n\r\n        var hoverTimeout = null;\r\n\r\n        var obj = {};\r\n        obj.video = this.container.find('video')[0];\r\n        this.video = obj.video;\r\n\r\n        obj.controls = this.container.find('.zd-video-controls');\r\n\r\n        this.controls = obj.controls;\r\n        obj.bigPlayBtn = this.container.find('.zd-video-big-play');\r\n        obj.playBtn = obj.controls.find('.zd-video-play');\r\n        obj.pauseBtn = obj.controls.find('.zd-video-pause');\r\n        obj.progressBar = obj.controls.find('.zd-video-progress-bar');\r\n        obj.volumeCon = obj.controls.find('.zd-video-volume');\r\n        obj.volumeBar = obj.controls.find('.zd-video-volume-bar');\r\n        obj.fullScreenBtn = obj.controls.find('.zd-video-fullscreen');\r\n        obj.videoTime = obj.controls.find('.zd-video-time');\r\n        //play\r\n        var playHandle = function (e) {\r\n            obj.video.play();\r\n            obj.playBtn.addClass('hide');\r\n            obj.pauseBtn.removeClass('hide');\r\n            obj.bigPlayBtn.addClass('hide');\r\n        }\r\n        obj.playBtn.on('click', playHandle);\r\n        obj.bigPlayBtn.on('click', playHandle);\r\n        //pause\r\n        obj.pauseBtn.on('click', function (e) {\r\n            obj.video.pause();\r\n            obj.playBtn.removeClass('hide');\r\n            obj.pauseBtn.addClass('hide');\r\n            obj.bigPlayBtn.addClass('hide');\r\n        });\r\n\r\n        obj.video.addEventListener('timeupdate', function () {\r\n            //time change\r\n            obj.secs = parseInt(obj.video.currentTime % 60, 10);\r\n            obj.mins = parseInt((obj.video.currentTime / 60) % 60, 10);\r\n            obj.secs = ('0' + obj.secs).slice(-2);\r\n            obj.mins = ('0' + obj.mins).slice(-2);\r\n            obj.videoTime.text(obj.mins + ':' + obj.secs);\r\n\r\n            //progress bar change\r\n            obj.percent = (100 / obj.video.duration) * obj.video.currentTime;\r\n            if (obj.percent > 0) {\r\n                obj.progressBar.width(obj.percent + '%');\r\n            }\r\n        }, false);\r\n\r\n\r\n        obj.video.addEventListener('playing', function () {\r\n            self.container.removeClass('zd-video-ispause');\r\n            obj.playBtn.css('display', 'none');\r\n            obj.pauseBtn.css('display', 'inline-block');\r\n            obj.bigPlayBtn.addClass('hide');\r\n        }, false);\r\n\r\n        obj.video.addEventListener('pause', function () {\r\n            self.container.addClass('zd-video-ispause');\r\n            obj.controls.addClass('show');\r\n            obj.pauseBtn.css('display', 'none');\r\n            obj.playBtn.css('display', 'inline-block');\r\n            obj.bigPlayBtn.removeClass('hide');\r\n        }, false);\r\n\r\n        obj.video.addEventListener('click', function () {\r\n            if (obj.video.paused) {\r\n                obj.video.play();\r\n            } else {\r\n                obj.video.pause();\r\n            }\r\n        }, false);\r\n\r\n        obj.video.addEventListener('mouseover', function () {\r\n            obj.controls.addClass('show');\r\n        }, false);\r\n\r\n        obj.video.addEventListener('mouseout', function () {\r\n            if (!obj.video.paused) {\r\n                hoverTimeout = setTimeout(function () {\r\n                    obj.controls.removeClass('show');\r\n                }, 1500);\r\n            }\r\n        }, false);\r\n\r\n        obj.controls.on('mouseover', function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            if (hoverTimeout) {\r\n                clearTimeout(hoverTimeout);\r\n            }\r\n            if (!obj.controls.hasClass('show')) {\r\n                obj.controls.addClass('show');\r\n            }\r\n        });\r\n\r\n        //volume set\r\n        //\r\n        obj.volumeCon.on('click', function (e) {\r\n            var x = e.clientX;\r\n            var offset = obj.volumeCon.offset();\r\n            var width = obj.volumeCon.width();\r\n            var ratio = (x - offset.left) / width;\r\n            obj.video.volume = ratio;\r\n            obj.volumeBar.css('width', (ratio * 100) + '%');\r\n        });\r\n\r\n        //full screen\r\n        obj.fullScreenBtn.on('click', function (e) {\r\n            launchFullScreen(self.video);\r\n        });\r\n    };\r\n\r\n    ZdVideo.prototype.init = function () {\r\n        this.setTpl();\r\n        this.addEvents();\r\n        this.setVideotDimensions();\r\n    }\r\n\r\n    ZdVideo.VERSION = '0.0.1';\r\n\r\n    root.ZdVideo = ZdVideo;\r\n\r\n})(jQuery, this);\r\n","/**\n * First we will load all of this project's JavaScript dependencies which\n * include Vue and Vue Resource. This gives a great starting point for\n * building robust, powerful web applications using Vue and Laravel.\n */\n\n//require('./bootstrap');\n\n/**\n * Next, we will create a fresh Vue application instance and attach it to\n * the body of the page. From here, you may begin adding components to\n * the application, or feel free to tweak this setup for your needs.\n */\n\n//Vue.component('example', require('./components/Example.vue'));\n//\n//const app = new Vue({\n//    el: '#app'\n//});\n\n\n$(function () {\n\n    var curPage = 1;\n    var notInItem = Array();\n    var cardItems = $('.card-items');\n    function getNormalList(curPage,notInItem){\n\n        $.ajax({\n            url:'/normal-list',\n            method:'GET',\n            data:{ page : curPage , not_in_item : notInItem},\n            success:function(response){\n                cardItems.append(response)\n                renderVideo();\n                curPage++;\n            }\n        })\n    }\n\n    function renderVideo(){\n\n        $('.card-new').each(function (i, item) {\n            var _this = $(item);\n            var card = _this.find('.video-card')\n            //if(_this.find('video')){\n            //    return ;\n            //}\n            _this.removeClass('card-new');\n            notInItem.push(card.attr('id'))\n            console.info(card.attr('id'))\n            card.css({'width':_this.outerWidth()});\n            //console.info(cardHeadr.width())\n            //console.info(_this.attr('data-id'))\n            var video = new ZdVideo({\n                container: card.attr('id'),\n                source: card.attr('data-src'),\n                poster: card.attr('data-poster'),\n                width : parseInt(_this.outerWidth()),\n                height:200,\n                //preload : true,\n                clickFun: function () {\n                    console.info(video.video.src)\n                    if (!video.video.src) {\n                        video.video.src = url;\n                        video.video.load();\n                    }\n                },\n                playingFun: function () {\n                    //playingFun(video)\n                }\n            });\n        });\n\n    }\n\n    getNormalList(1,notInItem);\n\n\n    // 加载flag\n    var loading = false;\n    // 最多可加载的条目\n    var maxItems = 100;\n\n    // 每次加载添加多少条目\n    var itemsPerLoad = 20;\n\n\n    // 上次加载的序号\n\n    var lastIndex = 20;\n\n    // 注册'infinite'事件处理函数\n    $(document).on('infinite', '.infinite-scroll-bottom',function() {\n\n        // 如果正在加载，则退出\n        if (loading) return;\n\n        // 设置flag\n        loading = true;\n\n        // 模拟1s的加载过程\n        setTimeout(function () {\n            // 重置加载flag\n            loading = false;\n\n            //if (lastIndex >= maxItems) {\n            //    // 加载完毕，则注销无限加载事件，以防不必要的加载\n            //    $.detachInfiniteScroll($('.infinite-scroll'));\n            //    // 删除加载提示符\n            //    $('.infinite-scroll-preloader').remove();\n            //    return;\n            //}\n\n            // 添加新条目\n            getNormalList(curPage, notInItem);\n            // 更新最后加载的序号\n            //lastIndex = $('.list-container li').length;\n            //容器发生改变,如果是js滚动，需要刷新滚动\n            $.refreshScroller();\n        }, 1000);\n\n    })\n\n\n});\n"]}