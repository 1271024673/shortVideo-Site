{"version":3,"sources":["zd-video.js","app.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["$(function () {\n    var root = this\n    // init video object\n    function ZdVideo(opts) {\n        opts = opts || {};\n        if (!opts.container || !$('#' + opts.container)) {\n            throw new Error('video container not found!')\n        }\n        //if (!opts.source || opts.source.length == 0) {\n        //    throw new Error('no video source found!')\n        //}\n        this.opts = opts;\n        this.container = $('#' + this.opts.container); //jquery obj\n        this.tpl = null;\n        this.init();\n    }\n\n    function _getVideoType(source) {\n        var texts = source.split('.');\n        var type = texts[texts.length - 1];\n        switch (type) {\n            case \"mp4\":\n                return 'video/mp4';\n            case 'wbbm':\n                return 'video/webm';\n            default:\n                return ''\n        }\n    }\n\n    function launchFullScreen(elem) {\n        var requestFullScreen = elem.requestFullscreen || elem.msRequestFullscreen || elem.mozRequestFullScreen || elem.webkitRequestFullscreen;\n        requestFullScreen.call(elem);\n    }\n\n    ZdVideo.prototype.setTpl = function () {\n\n        var width = this.opts.width ? this.opts.width : 640;\n        var height = this.opts.height ? this.opts.height : 320;\n        var tpl = '\\n<div class=\"zd-video\">\\n<div class=\"zd-video-control zd-video-big-play\"></div>\\n<video width=\"' + width + '\" height=\"' + height + '\"';\n        if (this.opts.autoplay) {\n            tpl += ' autoplay'\n        }\n        if (this.opts.loop) {\n            tpl += ' loop'\n        }\n        if (this.opts.poster) {\n            tpl += ' poster=' + this.opts.poster;\n        }\n        if (this.opts.title) {\n            tpl += ' title=' + this.opts.title;\n        }\n        if (this.opts.source && typeof this.opts.source === 'string') {\n            tpl += ' src=' + this.opts.source;\n        }\n\n        tpl += '>\\n';\n\n        if (this.opts.source && Array.isArray(this.opts.source) && this.opts.source.length > 0) {\n            this.opts.source.forEach(function (item) {\n                tpl += '<source src=' + item + ' type=' + _getVideoType(item) + '/>\\n';\n            });\n        }\n        tpl += '</video>\\n';\n\n        if (this.opts.control) {\n            //add controls\n            tpl += '<div class=\"zd-video-controls\">\\\n                <div class=\"zd-video-progress\">\\\n                  <div class=\"zd-video-progress-bar\"></div>\\\n                </div>\\\n                <div class=\"zd-controls-body\">\\\n                  <div class=\"zd-controls-left\">\\\n                    <span class=\"zd-video-play zd-video-control\"></span>\\\n                    <span class=\"zd-video-pause zd-video-control\"></span>\\\n                    <span class=\"zd-video-time\">00:00</span>\\\n                  </div>\\\n                  <div class=\"zd-controls-right\">\\\n                    <span class=\"zd-video-control zd-video-mute\"></span>\\\n                    <div class=\"zd-video-volume\">\\\n                      <div class=\"zd-video-volume-bar\"></div>\\\n                    </div>\\\n                    <span class=\"zd-video-control zd-video-fullscreen\"></span>\\\n                  </div>\\\n                </div>\\\n              </div>';\n        }\n\n        tpl += '</div>';\n\n        this.container.append($(tpl));\n    };\n\n    ZdVideo.prototype.setVideotDimensions = function () {\n        if (!this.video) {\n            this.video = this.container.find('video')[0];\n        }\n        var width = this.video.width;\n        var height = this.video.height;\n        this.container.css('width', width);\n\n        if (!this.controls) {\n            this.controls = this.container.find('.zd-video-controls');\n        }\n\n        //this.controls.css('width', width - 0);\n\n    };\n\n    ZdVideo.prototype.setFullScreenStyle = function () {\n        if (!this.video) {\n            this.video = this.container.find('video')[0];\n        }\n        this.container.css({width: '100%', height: '100%'});\n        this.video.setAttribute('width', '100%');\n        this.video.setAttribute('height', '100%');\n        this.controls.css('width', '90%');\n    };\n\n    ZdVideo.prototype.addEvents = function () {\n        var self = this;\n\n        var hoverTimeout = null;\n\n        var obj = {};\n        obj.video = this.container.find('video')[0];\n        this.video = obj.video;\n\n        obj.controls = this.container.find('.zd-video-controls');\n\n        this.controls = obj.controls;\n        obj.bigPlayBtn = this.container.find('.zd-video-big-play');\n        obj.playBtn = obj.controls.find('.zd-video-play');\n        obj.pauseBtn = obj.controls.find('.zd-video-pause');\n        obj.progressBar = obj.controls.find('.zd-video-progress-bar');\n        obj.volumeCon = obj.controls.find('.zd-video-volume');\n        obj.volumeBar = obj.controls.find('.zd-video-volume-bar');\n        obj.fullScreenBtn = obj.controls.find('.zd-video-fullscreen');\n        obj.videoTime = obj.controls.find('.zd-video-time');\n        //play\n        var playHandle = function (e) {\n            if(self.opts.clickFun){\n                self.opts.clickFun(true)\n            }\n            obj.video.play();\n            obj.playBtn.addClass('hide');\n            obj.pauseBtn.removeClass('hide');\n            obj.bigPlayBtn.addClass('hide');\n        }\n        obj.playBtn.on('click', playHandle);\n        obj.bigPlayBtn.on('click', playHandle);\n        //pause\n        obj.pauseBtn.on('click', function (e) {\n            obj.video.pause();\n            obj.playBtn.removeClass('hide');\n            obj.pauseBtn.addClass('hide');\n            obj.bigPlayBtn.addClass('hide');\n        });\n\n        obj.video.addEventListener('timeupdate', function () {\n            //time change\n            obj.secs = parseInt(obj.video.currentTime % 60, 10);\n            obj.mins = parseInt((obj.video.currentTime / 60) % 60, 10);\n            obj.secs = ('0' + obj.secs).slice(-2);\n            obj.mins = ('0' + obj.mins).slice(-2);\n            obj.videoTime.text(obj.mins + ':' + obj.secs);\n\n            //progress bar change\n            obj.percent = (100 / obj.video.duration) * obj.video.currentTime;\n            if (obj.percent > 0) {\n                obj.progressBar.width(obj.percent + '%');\n            }\n        }, false);\n\n\n        obj.video.addEventListener('playing', function () {\n            self.container.removeClass('zd-video-ispause');\n            obj.playBtn.css('display', 'none');\n            obj.pauseBtn.css('display', 'inline-block');\n            obj.bigPlayBtn.addClass('hide');\n            if(self.opts.playingFun){\n                self.opts.playingFun(true);\n            }\n        }, false);\n\n        obj.video.addEventListener('pause', function () {\n            self.container.addClass('zd-video-ispause');\n            obj.controls.addClass('show');\n            obj.pauseBtn.css('display', 'none');\n            obj.playBtn.css('display', 'inline-block');\n            obj.bigPlayBtn.removeClass('hide');\n        }, false);\n\n        obj.video.addEventListener('click', function () {\n            if(self.opts.clickFun){\n                self.opts.clickFun(true)\n            }\n            if (obj.video.paused) {\n                obj.video.play();\n            } else {\n                obj.video.pause();\n            }\n        }, false);\n\n        obj.video.addEventListener('mouseover', function () {\n            obj.controls.addClass('show');\n        }, false);\n\n        obj.video.addEventListener('mouseout', function () {\n            if (!obj.video.paused) {\n                hoverTimeout = setTimeout(function () {\n                    obj.controls.removeClass('show');\n                }, 1500);\n            }\n        }, false);\n\n        obj.controls.on('mouseover', function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            if (hoverTimeout) {\n                clearTimeout(hoverTimeout);\n            }\n            if (!obj.controls.hasClass('show')) {\n                obj.controls.addClass('show');\n            }\n        });\n\n        //volume set\n        //\n        obj.volumeCon.on('click', function (e) {\n            var x = e.clientX;\n            var offset = obj.volumeCon.offset();\n            var width = obj.volumeCon.width();\n            var ratio = (x - offset.left) / width;\n            obj.video.volume = ratio;\n            obj.volumeBar.css('width', (ratio * 100) + '%');\n        });\n\n        //full screen\n        obj.fullScreenBtn.on('click', function (e) {\n            launchFullScreen(self.video);\n        });\n    };\n\n    ZdVideo.prototype.init = function () {\n        this.setTpl();\n        this.addEvents();\n        this.setVideotDimensions();\n    }\n\n    ZdVideo.VERSION = '0.0.1';\n\n    root.ZdVideo = ZdVideo;\n\n})\n","$(function () {\r\n    var root = this\r\n    // init video object\r\n    function ZdVideo(opts) {\r\n        opts = opts || {};\r\n        if (!opts.container || !$('#' + opts.container)) {\r\n            throw new Error('video container not found!')\r\n        }\r\n        //if (!opts.source || opts.source.length == 0) {\r\n        //    throw new Error('no video source found!')\r\n        //}\r\n        this.opts = opts;\r\n        this.container = $('#' + this.opts.container); //jquery obj\r\n        this.tpl = null;\r\n        this.init();\r\n    }\r\n\r\n    function _getVideoType(source) {\r\n        var texts = source.split('.');\r\n        var type = texts[texts.length - 1];\r\n        switch (type) {\r\n            case \"mp4\":\r\n                return 'video/mp4';\r\n            case 'wbbm':\r\n                return 'video/webm';\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    function launchFullScreen(elem) {\r\n        var requestFullScreen = elem.requestFullscreen || elem.msRequestFullscreen || elem.mozRequestFullScreen || elem.webkitRequestFullscreen;\r\n        requestFullScreen.call(elem);\r\n    }\r\n\r\n    ZdVideo.prototype.setTpl = function () {\r\n\r\n        var width = this.opts.width ? this.opts.width : 640;\r\n        var height = this.opts.height ? this.opts.height : 320;\r\n        var tpl = '\\n<div class=\"zd-video\">\\n<div class=\"zd-video-control zd-video-big-play\"></div>\\n<video width=\"' + width + '\" height=\"' + height + '\"';\r\n        if (this.opts.autoplay) {\r\n            tpl += ' autoplay'\r\n        }\r\n        if (this.opts.loop) {\r\n            tpl += ' loop'\r\n        }\r\n        if (this.opts.poster) {\r\n            tpl += ' poster=' + this.opts.poster;\r\n        }\r\n        if (this.opts.title) {\r\n            tpl += ' title=' + this.opts.title;\r\n        }\r\n        if (this.opts.source && typeof this.opts.source === 'string') {\r\n            tpl += ' src=' + this.opts.source;\r\n        }\r\n\r\n        tpl += '>\\n';\r\n\r\n        if (this.opts.source && Array.isArray(this.opts.source) && this.opts.source.length > 0) {\r\n            this.opts.source.forEach(function (item) {\r\n                tpl += '<source src=' + item + ' type=' + _getVideoType(item) + '/>\\n';\r\n            });\r\n        }\r\n        tpl += '</video>\\n';\r\n\r\n        if (this.opts.control) {\r\n            //add controls\r\n            tpl += '<div class=\"zd-video-controls\">\\\r\n                <div class=\"zd-video-progress\">\\\r\n                  <div class=\"zd-video-progress-bar\"></div>\\\r\n                </div>\\\r\n                <div class=\"zd-controls-body\">\\\r\n                  <div class=\"zd-controls-left\">\\\r\n                    <span class=\"zd-video-play zd-video-control\"></span>\\\r\n                    <span class=\"zd-video-pause zd-video-control\"></span>\\\r\n                    <span class=\"zd-video-time\">00:00</span>\\\r\n                  </div>\\\r\n                  <div class=\"zd-controls-right\">\\\r\n                    <span class=\"zd-video-control zd-video-mute\"></span>\\\r\n                    <div class=\"zd-video-volume\">\\\r\n                      <div class=\"zd-video-volume-bar\"></div>\\\r\n                    </div>\\\r\n                    <span class=\"zd-video-control zd-video-fullscreen\"></span>\\\r\n                  </div>\\\r\n                </div>\\\r\n              </div>';\r\n        }\r\n\r\n        tpl += '</div>';\r\n\r\n        this.container.append($(tpl));\r\n    };\r\n\r\n    ZdVideo.prototype.setVideotDimensions = function () {\r\n        if (!this.video) {\r\n            this.video = this.container.find('video')[0];\r\n        }\r\n        var width = this.video.width;\r\n        var height = this.video.height;\r\n        this.container.css('width', width);\r\n\r\n        if (!this.controls) {\r\n            this.controls = this.container.find('.zd-video-controls');\r\n        }\r\n\r\n        //this.controls.css('width', width - 0);\r\n\r\n    };\r\n\r\n    ZdVideo.prototype.setFullScreenStyle = function () {\r\n        if (!this.video) {\r\n            this.video = this.container.find('video')[0];\r\n        }\r\n        this.container.css({width: '100%', height: '100%'});\r\n        this.video.setAttribute('width', '100%');\r\n        this.video.setAttribute('height', '100%');\r\n        this.controls.css('width', '90%');\r\n    };\r\n\r\n    ZdVideo.prototype.addEvents = function () {\r\n        var self = this;\r\n\r\n        var hoverTimeout = null;\r\n\r\n        var obj = {};\r\n        obj.video = this.container.find('video')[0];\r\n        this.video = obj.video;\r\n\r\n        obj.controls = this.container.find('.zd-video-controls');\r\n\r\n        this.controls = obj.controls;\r\n        obj.bigPlayBtn = this.container.find('.zd-video-big-play');\r\n        obj.playBtn = obj.controls.find('.zd-video-play');\r\n        obj.pauseBtn = obj.controls.find('.zd-video-pause');\r\n        obj.progressBar = obj.controls.find('.zd-video-progress-bar');\r\n        obj.volumeCon = obj.controls.find('.zd-video-volume');\r\n        obj.volumeBar = obj.controls.find('.zd-video-volume-bar');\r\n        obj.fullScreenBtn = obj.controls.find('.zd-video-fullscreen');\r\n        obj.videoTime = obj.controls.find('.zd-video-time');\r\n        //play\r\n        var playHandle = function (e) {\r\n            if(self.opts.clickFun){\r\n                self.opts.clickFun(true)\r\n            }\r\n            obj.video.play();\r\n            obj.playBtn.addClass('hide');\r\n            obj.pauseBtn.removeClass('hide');\r\n            obj.bigPlayBtn.addClass('hide');\r\n        }\r\n        obj.playBtn.on('click', playHandle);\r\n        obj.bigPlayBtn.on('click', playHandle);\r\n        //pause\r\n        obj.pauseBtn.on('click', function (e) {\r\n            obj.video.pause();\r\n            obj.playBtn.removeClass('hide');\r\n            obj.pauseBtn.addClass('hide');\r\n            obj.bigPlayBtn.addClass('hide');\r\n        });\r\n\r\n        obj.video.addEventListener('timeupdate', function () {\r\n            //time change\r\n            obj.secs = parseInt(obj.video.currentTime % 60, 10);\r\n            obj.mins = parseInt((obj.video.currentTime / 60) % 60, 10);\r\n            obj.secs = ('0' + obj.secs).slice(-2);\r\n            obj.mins = ('0' + obj.mins).slice(-2);\r\n            obj.videoTime.text(obj.mins + ':' + obj.secs);\r\n\r\n            //progress bar change\r\n            obj.percent = (100 / obj.video.duration) * obj.video.currentTime;\r\n            if (obj.percent > 0) {\r\n                obj.progressBar.width(obj.percent + '%');\r\n            }\r\n        }, false);\r\n\r\n\r\n        obj.video.addEventListener('playing', function () {\r\n            self.container.removeClass('zd-video-ispause');\r\n            obj.playBtn.css('display', 'none');\r\n            obj.pauseBtn.css('display', 'inline-block');\r\n            obj.bigPlayBtn.addClass('hide');\r\n            if(self.opts.playingFun){\r\n                self.opts.playingFun(true);\r\n            }\r\n        }, false);\r\n\r\n        obj.video.addEventListener('pause', function () {\r\n            self.container.addClass('zd-video-ispause');\r\n            obj.controls.addClass('show');\r\n            obj.pauseBtn.css('display', 'none');\r\n            obj.playBtn.css('display', 'inline-block');\r\n            obj.bigPlayBtn.removeClass('hide');\r\n        }, false);\r\n\r\n        obj.video.addEventListener('click', function () {\r\n            if(self.opts.clickFun){\r\n                self.opts.clickFun(true)\r\n            }\r\n            if (obj.video.paused) {\r\n                obj.video.play();\r\n            } else {\r\n                obj.video.pause();\r\n            }\r\n        }, false);\r\n\r\n        obj.video.addEventListener('mouseover', function () {\r\n            obj.controls.addClass('show');\r\n        }, false);\r\n\r\n        obj.video.addEventListener('mouseout', function () {\r\n            if (!obj.video.paused) {\r\n                hoverTimeout = setTimeout(function () {\r\n                    obj.controls.removeClass('show');\r\n                }, 1500);\r\n            }\r\n        }, false);\r\n\r\n        obj.controls.on('mouseover', function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            if (hoverTimeout) {\r\n                clearTimeout(hoverTimeout);\r\n            }\r\n            if (!obj.controls.hasClass('show')) {\r\n                obj.controls.addClass('show');\r\n            }\r\n        });\r\n\r\n        //volume set\r\n        //\r\n        obj.volumeCon.on('click', function (e) {\r\n            var x = e.clientX;\r\n            var offset = obj.volumeCon.offset();\r\n            var width = obj.volumeCon.width();\r\n            var ratio = (x - offset.left) / width;\r\n            obj.video.volume = ratio;\r\n            obj.volumeBar.css('width', (ratio * 100) + '%');\r\n        });\r\n\r\n        //full screen\r\n        obj.fullScreenBtn.on('click', function (e) {\r\n            launchFullScreen(self.video);\r\n        });\r\n    };\r\n\r\n    ZdVideo.prototype.init = function () {\r\n        this.setTpl();\r\n        this.addEvents();\r\n        this.setVideotDimensions();\r\n    }\r\n\r\n    ZdVideo.VERSION = '0.0.1';\r\n\r\n    root.ZdVideo = ZdVideo;\r\n\r\n})\r\n\r\n/**\r\n * First we will load all of this project's JavaScript dependencies which\r\n * include Vue and Vue Resource. This gives a great starting point for\r\n * building robust, powerful web applications using Vue and Laravel.\r\n */\r\n\r\n//require('./bootstrap');\r\n\r\n/**\r\n * Next, we will create a fresh Vue application instance and attach it to\r\n * the body of the page. From here, you may begin adding components to\r\n * the application, or feel free to tweak this setup for your needs.\r\n */\r\n\r\n//Vue.component('example', require('./components/Example.vue'));\r\n//\r\n//const app = new Vue({\r\n//    el: '#app'\r\n//});\r\n\r\n\r\n$(function () {\r\n\r\n\r\n    $$.extend({\r\n\r\n        svs: function (_opt) {\r\n\r\n            var _this = this;\r\n            var _default = {\r\n                curPage: 1,\r\n                notInItem: Array(),\r\n                cardItemsWrapper: '.card-items',\r\n                hasMore: true,\r\n                curPlayVideo: null,\r\n                cardItem: '.card-new',\r\n                infiniteScroll: '.infinite-scroll-bottom',\r\n                watchItems : Array()\r\n\r\n            };\r\n            _default = $$.extend(_default, _opt);\r\n            _this.setDefault = function (_opt) {\r\n                _default = $$.extend(_default, _opt);\r\n            };\r\n            _this.getDefault = function(){\r\n                return _default;\r\n            };\r\n\r\n            _this.getWatchCache = function(){\r\n                if(window.localStorage){\r\n                    var items = localStorage.getItem('watch-record')\r\n                    if(items){\r\n                        items = JSON.parse(items);\r\n                    }else{\r\n                        items = [];\r\n                        //_default.watchItems = JSON.stringify(_default.watchItems)\r\n                    }\r\n                    return items;\r\n                }\r\n            }\r\n            _this.watchRecord = function(id){\r\n                if(window.localStorage){\r\n                    _default.watchItems = localStorage.getItem('watch-record')\r\n                    if(_default.watchItems){\r\n                        _default.watchItems = JSON.parse(_default.watchItems);\r\n                    }else{\r\n                        _default.watchItems = [];\r\n                        //_default.watchItems = JSON.stringify(_default.watchItems)\r\n                    }\r\n\r\n                    _default.watchItems.push(id)\r\n                    localStorage.setItem('watch-record',JSON.stringify(_default.watchItems))\r\n                }\r\n            }\r\n            _this.getNormalList = function getNormalList(url, method, prams) {\r\n                $.ajax({\r\n                    url: url,\r\n                    method: method,\r\n                    data: prams,\r\n                    success: function (response) {\r\n                        $(_default.cardItemsWrapper).append(response.view)\r\n                        _this.renderHtml();\r\n                        _default.curPage++;\r\n                        if (response.current_page == response.last_page) {\r\n                            _default.hasMore = false;\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n\r\n            _this.renderHtml = function () {\r\n                $(_default.cardItem).each(function (i, item) {\r\n                    var _this = $(item);\r\n                    console.info(_this.find('video').length)\r\n                    if (_this.find('video').length == 0) {\r\n                        var card = _this.find('.video-card')\r\n                        _this.removeAttr('render-html');\r\n                        _default.notInItem.push(card.attr('id'))\r\n                        card.css({'width': _this.outerWidth()});\r\n                        var video = new ZdVideo({\r\n                            container: card.attr('id'),\r\n                            //source: card.attr('data-src'),\r\n                            poster: card.attr('data-poster'),\r\n                            title: card.attr('data-title'),\r\n                            width: parseInt(_this.outerWidth()),\r\n                            height: 200,\r\n                            clickFun: function () {\r\n                                if (!video.video.src) {\r\n                                    video.video.src = card.attr('data-src');\r\n                                    video.video.load();\r\n                                }\r\n                            },\r\n                            playingFun: function () {\r\n\r\n                                if (_default.curPlayVideo && _default.curPlayVideo != video.video) {\r\n                                    _default.curPlayVideo.pause();\r\n                                }\r\n                                _default.curPlayVideo = video.video;\r\n                                _this.watchRecord(card.attr('id'))\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                });\r\n\r\n            }\r\n\r\n            _this.initScroll = function (callback) {\r\n\r\n                // 注册'infinite'事件处理函数\r\n                $(document).on('infinite', _default.infiniteScroll, function () {\r\n\r\n                    // 如果正在加载，则退出\r\n                    if (_default.loading) return;\r\n\r\n                    // 设置flag\r\n                    _default.loading = true;\r\n\r\n                    // 模拟1s的加载过程\r\n                    setTimeout(function () {\r\n                        // 重置加载flag\r\n                        _default.loading = false;\r\n\r\n                        if (_default.hasMore == false) {\r\n                            // 加载完毕，则注销无限加载事件，以防不必要的加载\r\n                            $.detachInfiniteScroll($('.infinite-scroll'));\r\n                            // 删除加载提示符\r\n                            $('.infinite-scroll-preloader').remove();\r\n                            return;\r\n                        }\r\n\r\n                        callback();\r\n                        // 添加新条目\r\n                        // getNormalList(curPage, notInItem);\r\n                        // 更新最后加载的序号\r\n                        //lastIndex = $('.list-container li').length;\r\n                        //容器发生改变,如果是js滚动，需要刷新滚动\r\n                        $.refreshScroller();\r\n                    }, 1000);\r\n\r\n                });\r\n            }\r\n\r\n            return _this;\r\n\r\n\r\n        }\r\n    });\r\n\r\n    //$.pageParms = {\r\n    //    curPage: 1,\r\n    //    notInItem: Array(),\r\n    //    cardItems: $('.card-items'),\r\n    //    hasMore: true,\r\n    //    curPlayVideo: null\r\n    //};\r\n    //\r\n    //$.getVideoList = function () {\r\n    //\r\n    //};\r\n    //\r\n    //jquery.extend({\r\n    //    pageParams: {\r\n    //        curPage: 1,\r\n    //        notInItem: Array(),\r\n    //        cardItems: $('.card-items'),\r\n    //        hasMore: true,\r\n    //        curPlayVideo: null\r\n    //    },\r\n    //    test: function () {\r\n    //        console.info(jquery.pageParams.hasMore)\r\n    //    },\r\n    //    getNormalList: function getNormalList(page, notInItem) {\r\n    //\r\n    //        $.ajax({\r\n    //            url: '/normal-list',\r\n    //            method: 'GET',\r\n    //            data: {page: page, not_in_item: notInItem},\r\n    //            success: function (response) {\r\n    //                jquery.pageParams.cardItems.append(response.view)\r\n    //                renderVideo();\r\n    //                jquery.pageParams.curPage++;\r\n    //                if (response.current_page == response.last_page) {\r\n    //                    jquery.pageParams.hasMore = false;\r\n    //                }\r\n    //            }\r\n    //        })\r\n    //    }\r\n    //\r\n    //});\r\n    //\r\n    //jquery.test();\r\n    //\r\n    ////return ;\r\n    //var curPage = 1;\r\n    //var notInItem = Array();\r\n    //var cardItems = $('.card-items');\r\n    //var hasMore = true;\r\n    //var curPlayVideo = null;\r\n    //\r\n    //function getNormalList(page, notInItem) {\r\n    //\r\n    //    $.ajax({\r\n    //        url: '/normal-list',\r\n    //        method: 'GET',\r\n    //        data: {page: page, not_in_item: notInItem},\r\n    //        success: function (response) {\r\n    //            cardItems.append(response.view)\r\n    //            renderVideo();\r\n    //            curPage++;\r\n    //            if (response.current_page == response.last_page) {\r\n    //                hasMore = false;\r\n    //            }\r\n    //        }\r\n    //    })\r\n    //}\r\n    //\r\n    //renderVideo();\r\n    ////渲染视频\r\n    //function renderVideo() {\r\n    //    $('.card-new').each(function (i, item) {\r\n    //        var _this = $(item);\r\n    //        console.info(_this.find('video').length)\r\n    //        if (_this.find('video').length == 0) {\r\n    //            var card = _this.find('.video-card')\r\n    //            _this.removeAttr('render-html');\r\n    //            notInItem.push(card.attr('id'))\r\n    //            card.css({'width': _this.outerWidth()});\r\n    //            var video = new ZdVideo({\r\n    //                container: card.attr('id'),\r\n    //                //source: card.attr('data-src'),\r\n    //                poster: card.attr('data-poster'),\r\n    //                title: card.attr('data-title'),\r\n    //                width: parseInt(_this.outerWidth()),\r\n    //                height: 200,\r\n    //                clickFun: function () {\r\n    //                    if (!video.video.src) {\r\n    //                        video.video.src = card.attr('data-src');\r\n    //                        video.video.load();\r\n    //                    }\r\n    //                },\r\n    //                playingFun: function () {\r\n    //\r\n    //                    if (curPlayVideo && curPlayVideo != video.video) {\r\n    //                        curPlayVideo.pause();\r\n    //                    }\r\n    //                    curPlayVideo = video.video;\r\n    //                }\r\n    //            });\r\n    //        }\r\n    //\r\n    //    });\r\n    //\r\n    //}\r\n    //\r\n    //getNormalList(1, notInItem);\r\n    //\r\n    //\r\n    //// 加载flag\r\n    //var loading = false;\r\n    //\r\n    //// 注册'infinite'事件处理函数\r\n    //$(document).on('infinite', '.infinite-scroll-bottom', function () {\r\n    //\r\n    //    // 如果正在加载，则退出\r\n    //    if (loading) return;\r\n    //\r\n    //    // 设置flag\r\n    //    loading = true;\r\n    //\r\n    //    // 模拟1s的加载过程\r\n    //    setTimeout(function () {\r\n    //        // 重置加载flag\r\n    //        loading = false;\r\n    //\r\n    //        if (hasMore == false) {\r\n    //            // 加载完毕，则注销无限加载事件，以防不必要的加载\r\n    //            $.detachInfiniteScroll($('.infinite-scroll'));\r\n    //            // 删除加载提示符\r\n    //            $('.infinite-scroll-preloader').remove();\r\n    //            return;\r\n    //        }\r\n    //\r\n    //        // 添加新条目\r\n    //        getNormalList(curPage, notInItem);\r\n    //        // 更新最后加载的序号\r\n    //        //lastIndex = $('.list-container li').length;\r\n    //        //容器发生改变,如果是js滚动，需要刷新滚动\r\n    //        $.refreshScroller();\r\n    //    }, 1000);\r\n    //\r\n    //});\r\n\r\n    $(document).on('click', 'a.card-detail', function () {\r\n        $.router.load($(this).attr('data-href'));\r\n    })\r\n\r\n\r\n    $.init();\r\n\r\n\r\n});\r\n\r\n//# sourceMappingURL=app.js.map\r\n"]}