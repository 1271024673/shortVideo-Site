{"version":3,"sources":["zd-video.js","app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzfile":"app.js","sourcesContent":["$(function () {\n    var root = this\n    // init video object\n    function ZdVideo(opts) {\n        opts = opts || {};\n        if (!opts.container || !$('#' + opts.container)) {\n            throw new Error('video container not found!')\n        }\n        //if (!opts.source || opts.source.length == 0) {\n        //    throw new Error('no video source found!')\n        //}\n        this.opts = opts;\n        this.container = $('#' + this.opts.container); //jquery obj\n        this.tpl = null;\n        this.init();\n    }\n\n    function _getVideoType(source) {\n        var texts = source.split('.');\n        var type = texts[texts.length - 1];\n        switch (type) {\n            case \"mp4\":\n                return 'video/mp4';\n            case 'wbbm':\n                return 'video/webm';\n            default:\n                return ''\n        }\n    }\n\n    function launchFullScreen(elem) {\n        var requestFullScreen = elem.requestFullscreen || elem.msRequestFullscreen || elem.mozRequestFullScreen || elem.webkitRequestFullscreen;\n        requestFullScreen.call(elem);\n    }\n\n    ZdVideo.prototype.setTpl = function () {\n\n        var width = this.opts.width ? this.opts.width : 640;\n        var height = this.opts.height ? this.opts.height : 320;\n        var tpl = '\\n<div class=\"zd-video\">\\n<div class=\"zd-video-control zd-video-big-play\"></div>\\n<video width=\"' + width + '\" height=\"' + height + '\"';\n        if (this.opts.autoplay) {\n            tpl += ' autoplay'\n        }\n        if (this.opts.loop) {\n            tpl += ' loop'\n        }\n        if (this.opts.poster) {\n            tpl += ' poster=' + this.opts.poster;\n        }\n        if (this.opts.source && typeof this.opts.source === 'string') {\n            tpl += ' src=' + this.opts.source;\n        }\n\n        tpl += '>\\n';\n\n        if (this.opts.source && Array.isArray(this.opts.source) && this.opts.source.length > 0) {\n            this.opts.source.forEach(function (item) {\n                tpl += '<source src=' + item + ' type=' + _getVideoType(item) + '/>\\n';\n            });\n        }\n        tpl += '</video>\\n';\n\n        //add controls\n        tpl += '<div class=\"zd-video-controls\">\\\n                <div class=\"zd-video-progress\">\\\n                  <div class=\"zd-video-progress-bar\"></div>\\\n                </div>\\\n                <div class=\"zd-controls-body\">\\\n                  <div class=\"zd-controls-left\">\\\n                    <span class=\"zd-video-play zd-video-control\"></span>\\\n                    <span class=\"zd-video-pause zd-video-control\"></span>\\\n                    <span class=\"zd-video-time\">00:00</span>\\\n                  </div>\\\n                  <div class=\"zd-controls-right\">\\\n                    <span class=\"zd-video-control zd-video-mute\"></span>\\\n                    <div class=\"zd-video-volume\">\\\n                      <div class=\"zd-video-volume-bar\"></div>\\\n                    </div>\\\n                    <span class=\"zd-video-control zd-video-fullscreen\"></span>\\\n                  </div>\\\n                </div>\\\n              </div>';\n        tpl += '</div>';\n\n        this.container.append($(tpl));\n    };\n\n    ZdVideo.prototype.setVideotDimensions = function () {\n        if (!this.video) {\n            this.video = this.container.find('video')[0];\n        }\n        var width = this.video.width;\n        var height = this.video.height;\n        this.container.css('width', width);\n\n        if (!this.controls) {\n            this.controls = this.container.find('.zd-video-controls');\n        }\n\n        //this.controls.css('width', width - 0);\n\n    };\n\n    ZdVideo.prototype.setFullScreenStyle = function () {\n        if (!this.video) {\n            this.video = this.container.find('video')[0];\n        }\n        this.container.css({width: '100%', height: '100%'});\n        this.video.setAttribute('width', '100%');\n        this.video.setAttribute('height', '100%');\n        this.controls.css('width', '90%');\n    };\n\n    ZdVideo.prototype.addEvents = function () {\n        var self = this;\n\n        var hoverTimeout = null;\n\n        var obj = {};\n        obj.video = this.container.find('video')[0];\n        this.video = obj.video;\n\n        obj.controls = this.container.find('.zd-video-controls');\n\n        this.controls = obj.controls;\n        obj.bigPlayBtn = this.container.find('.zd-video-big-play');\n        obj.playBtn = obj.controls.find('.zd-video-play');\n        obj.pauseBtn = obj.controls.find('.zd-video-pause');\n        obj.progressBar = obj.controls.find('.zd-video-progress-bar');\n        obj.volumeCon = obj.controls.find('.zd-video-volume');\n        obj.volumeBar = obj.controls.find('.zd-video-volume-bar');\n        obj.fullScreenBtn = obj.controls.find('.zd-video-fullscreen');\n        obj.videoTime = obj.controls.find('.zd-video-time');\n        //play\n        var playHandle = function (e) {\n            if(self.opts.clickFun){\n                self.opts.clickFun(true)\n            }\n            obj.video.play();\n            obj.playBtn.addClass('hide');\n            obj.pauseBtn.removeClass('hide');\n            obj.bigPlayBtn.addClass('hide');\n        }\n        obj.playBtn.on('click', playHandle);\n        obj.bigPlayBtn.on('click', playHandle);\n        //pause\n        obj.pauseBtn.on('click', function (e) {\n            obj.video.pause();\n            obj.playBtn.removeClass('hide');\n            obj.pauseBtn.addClass('hide');\n            obj.bigPlayBtn.addClass('hide');\n        });\n\n        obj.video.addEventListener('timeupdate', function () {\n            //time change\n            obj.secs = parseInt(obj.video.currentTime % 60, 10);\n            obj.mins = parseInt((obj.video.currentTime / 60) % 60, 10);\n            obj.secs = ('0' + obj.secs).slice(-2);\n            obj.mins = ('0' + obj.mins).slice(-2);\n            obj.videoTime.text(obj.mins + ':' + obj.secs);\n\n            //progress bar change\n            obj.percent = (100 / obj.video.duration) * obj.video.currentTime;\n            if (obj.percent > 0) {\n                obj.progressBar.width(obj.percent + '%');\n            }\n        }, false);\n\n\n        obj.video.addEventListener('playing', function () {\n            self.container.removeClass('zd-video-ispause');\n            obj.playBtn.css('display', 'none');\n            obj.pauseBtn.css('display', 'inline-block');\n            obj.bigPlayBtn.addClass('hide');\n            if(self.opts.playingFun){\n                self.opts.playingFun(true);\n            }\n        }, false);\n\n        obj.video.addEventListener('pause', function () {\n            self.container.addClass('zd-video-ispause');\n            obj.controls.addClass('show');\n            obj.pauseBtn.css('display', 'none');\n            obj.playBtn.css('display', 'inline-block');\n            obj.bigPlayBtn.removeClass('hide');\n        }, false);\n\n        obj.video.addEventListener('click', function () {\n            if(self.opts.clickFun){\n                self.opts.clickFun(true)\n            }\n            if (obj.video.paused) {\n                obj.video.play();\n            } else {\n                obj.video.pause();\n            }\n        }, false);\n\n        obj.video.addEventListener('mouseover', function () {\n            obj.controls.addClass('show');\n        }, false);\n\n        obj.video.addEventListener('mouseout', function () {\n            if (!obj.video.paused) {\n                hoverTimeout = setTimeout(function () {\n                    obj.controls.removeClass('show');\n                }, 1500);\n            }\n        }, false);\n\n        obj.controls.on('mouseover', function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            if (hoverTimeout) {\n                clearTimeout(hoverTimeout);\n            }\n            if (!obj.controls.hasClass('show')) {\n                obj.controls.addClass('show');\n            }\n        });\n\n        //volume set\n        //\n        obj.volumeCon.on('click', function (e) {\n            var x = e.clientX;\n            var offset = obj.volumeCon.offset();\n            var width = obj.volumeCon.width();\n            var ratio = (x - offset.left) / width;\n            obj.video.volume = ratio;\n            obj.volumeBar.css('width', (ratio * 100) + '%');\n        });\n\n        //full screen\n        obj.fullScreenBtn.on('click', function (e) {\n            launchFullScreen(self.video);\n        });\n    };\n\n    ZdVideo.prototype.init = function () {\n        this.setTpl();\n        this.addEvents();\n        this.setVideotDimensions();\n    }\n\n    ZdVideo.VERSION = '0.0.1';\n\n    root.ZdVideo = ZdVideo;\n\n})\n","/**\n * First we will load all of this project's JavaScript dependencies which\n * include Vue and Vue Resource. This gives a great starting point for\n * building robust, powerful web applications using Vue and Laravel.\n */\n\n//require('./bootstrap');\n\n/**\n * Next, we will create a fresh Vue application instance and attach it to\n * the body of the page. From here, you may begin adding components to\n * the application, or feel free to tweak this setup for your needs.\n */\n\n//Vue.component('example', require('./components/Example.vue'));\n//\n//const app = new Vue({\n//    el: '#app'\n//});\n\n\n$(function () {\n\n    var curPage = 1;\n    var notInItem = Array();\n    var cardItems = $('.card-items');\n    var hasMore = true;\n    var curPlayVideo = null;\n\n    function getNormalList(page, notInItem) {\n\n        $.ajax({\n            url: '/normal-list',\n            method: 'GET',\n            data: {page: page, not_in_item: notInItem},\n            success: function (response) {\n                cardItems.append(response.view)\n                renderVideo();\n                curPage++;\n                if(response.current_page == response.last_page){\n                    hasMore = false;\n                }\n            }\n        })\n    }\n\n    //渲染视频\n    function renderVideo() {\n\n        $('.card-new[render-html=false]').each(function (i, item) {\n            var _this = $(item);\n            if(_this.attr('render-html') == false){\n                return ;\n            }\n            var card = _this.find('.video-card')\n            _this.removeAttr('render-html');\n            notInItem.push(card.attr('id'))\n            card.css({'width': _this.outerWidth()});\n            var video = new ZdVideo({\n                container: card.attr('id'),\n                //source: card.attr('data-src'),\n                poster: card.attr('data-poster'),\n                width: parseInt(_this.outerWidth()),\n                height: 200,\n                clickFun: function () {\n                    if (!video.video.src) {\n                        video.video.src = card.attr('data-src');\n                        video.video.load();\n                    }\n                },\n                playingFun: function () {\n\n                    if(curPlayVideo && curPlayVideo != video.video){\n                        curPlayVideo.pause();\n                    }\n                    curPlayVideo = video.video;\n                }\n            });\n        });\n\n    }\n\n    getNormalList(1, notInItem);\n\n\n    // 加载flag\n    var loading = false;\n\n    // 注册'infinite'事件处理函数\n    $(document).on('infinite', '.infinite-scroll-bottom', function () {\n\n        // 如果正在加载，则退出\n        if (loading) return;\n\n        // 设置flag\n        loading = true;\n\n        // 模拟1s的加载过程\n        setTimeout(function () {\n            // 重置加载flag\n            loading = false;\n\n            if (hasMore == false) {\n                // 加载完毕，则注销无限加载事件，以防不必要的加载\n                $.detachInfiniteScroll($('.infinite-scroll'));\n                // 删除加载提示符\n                $('.infinite-scroll-preloader').remove();\n                return;\n            }\n\n            // 添加新条目\n            getNormalList(curPage, notInItem);\n            // 更新最后加载的序号\n            //lastIndex = $('.list-container li').length;\n            //容器发生改变,如果是js滚动，需要刷新滚动\n            $.refreshScroller();\n        }, 1000);\n\n    });\n\n    $(document).on('click','a.card-detail',function(){\n        $.router.load($(this).attr('data-href'));\n    })\n\n\n    $.init();\n\n\n});\n"]}